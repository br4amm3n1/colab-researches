# -*- coding: utf-8 -*-
"""prac14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10s7bDdipFS7X8jVxTNrb24qQSKIYwXhH
"""

import pandas as pd
from sklearn.model_selection import train_test_split

df_pokemon = pd.read_csv('pokemon.csv')
df_pokemon = df_pokemon.dropna()

df_pokemon_modified = df_pokemon[['height_m', 'speed', 'weight_kg', 'type1']].copy()

df_pokemon_modified['type1'] = df_pokemon_modified['type1'].replace(['grass', 'fire',
                                                                     'water', 'bug', 'normal',
                                                                     'poison', 'electric', 'ground',
                                                                     'fairy', 'fighting', 'psychic',
                                                                     'rock', 'ghost', 'ice',
                                                                     'dragon', 'dark', 'steel',
                                                                     'flying'], [0, 1, 2, 3, 4, 5, 6,
                                                                                 7, 8, 9, 10, 11, 12,
                                                                                 13, 14, 15, 16, 17])
print(df_pokemon_modified.loc[df_pokemon_modified['type1'] == 17])

f1 = list(df_pokemon_modified['weight_kg'])
f2 = list(df_pokemon_modified['height_m'])
f3 = list(df_pokemon_modified['speed'])

X = []

for i in range(len(f1)):
  X.append([f1[i], f2[i], f3[i]])

# print(X)

y = list(df_pokemon_modified['type1'])
X_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size = 0.1, random_state = 0)
print(X_train, Y_train, sep='\n')

!pip install -U git+https://github.com/scikit-multiflow/scikit-multiflow

from skmultiflow.trees import HoeffdingTreeClassifier

htc = HoeffdingTreeClassifier()
htc = htc.fit(X_train, Y_train)
accuracy = htc.score(X_test, Y_test)

print("Точность определения покемонов по 18 различным типам: {}".format(accuracy))

accuracy_ts = [0.1405, 0.1103, 0.1555, 0.1176, 0.1647, 0.1102, 0.1176, 0.1323, 0.0882]
train_size = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]

import numpy as np
import matplotlib.pyplot as plt

plt.plot(train_size, accuracy_ts, 'bs')
plt.xlabel("Train Size")
plt.ylabel("Accuracy")
plt.title("Зависимость точности от размера обучающей выборки")
plt.show()